{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\env\\\\repos\\\\AsyncStorage\\\\screens\\\\Register.js\";\nimport React, { useState } from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport styles from \"./Register.stylesheet\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\n\nvar DismissKeyboard = function DismissKeyboard(_ref) {\n  var children = _ref.children;\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default function Register(_ref2) {\n  var navigation = _ref2.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      senha = _useState4[0],\n      setSenha = _useState4[1];\n\n  var senhaInput;\n\n  var register = function register(email, senha) {\n    var callback,\n        emailCadastrado,\n        _args = arguments;\n    return _regeneratorRuntime.async(function register$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            callback = _args.length > 2 && _args[2] !== undefined ? _args[2] : null;\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(email, callback));\n\n          case 4:\n            emailCadastrado = _context.sent;\n\n            if (!emailCadastrado) {\n              _context.next = 7;\n              break;\n            }\n\n            throw new Error('E-mail já existe');\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(email, senha, callback));\n\n          case 9:\n            navigation.navigate('Login');\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](1);\n            throw new Error('Erro ao cadastrar');\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 12]], Promise);\n  };\n\n  return React.createElement(DismissKeyboard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(SafeAreaView, {\n    style: styles.background,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.containerTop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.mainTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"Async Storage\"), React.createElement(Text, {\n    style: styles.subTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Crie sua conta gr\\xE1tis\")), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Digite seu e-mail...\",\n    autoCorrect: false,\n    keyboardType: \"email-address\",\n    autoCapitalize: \"none\",\n    returnKeyType: \"next\",\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    defaultValue: email,\n    onSubmitEditing: function onSubmitEditing() {\n      return senhaInput.focus();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Digite sua senha...\",\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    returnKeyType: \"go\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(senha) {\n      return setSenha(senha);\n    },\n    defaultValue: senha,\n    ref: function ref(input) {\n      return senhaInput = input;\n    },\n    onSubmitEditing: function onSubmitEditing() {\n      return '';\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.submitLogin,\n    activeOpacity: 0.8,\n    onPress: function onPress() {\n      return register(email, senha);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.submitText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"CRIAR CONTA\"))));\n}","map":{"version":3,"sources":["C:/env/repos/AsyncStorage/screens/Register.js"],"names":["React","useState","styles","DismissKeyboard","children","Keyboard","dismiss","Register","navigation","email","setEmail","senha","setSenha","senhaInput","register","callback","AsyncStorage","getItem","emailCadastrado","Error","setItem","navigate","background","containerTop","mainTitle","subTitle","input","focus","submitLogin","submitText"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Keyboard, SafeAreaView, Text, TextInput, TouchableOpacity, TouchableWithoutFeedback, View } from 'react-native';\r\nimport styles from './Register.stylesheet';\r\nimport { AsyncStorage } from \"react-native-web\";\r\n\r\nconst DismissKeyboard = ({ children }) => (\r\n    <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\r\n        {children}\r\n    </TouchableWithoutFeedback>\r\n);\r\n\r\nexport default function Register({ navigation }) {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n\r\n    let senhaInput;\r\n\r\n    /**\r\n     * Register function\r\n     */\r\n    const register = async (email, senha, callback = null) => {\r\n        try {\r\n            const emailCadastrado = await AsyncStorage.getItem(email, callback);\r\n\r\n            if (emailCadastrado) {\r\n                throw new Error('E-mail já existe');\r\n            }\r\n\r\n            await AsyncStorage.setItem(email, senha, callback);\r\n\r\n            navigation.navigate('Login');\r\n        } catch (e) {\r\n            throw new Error('Erro ao cadastrar');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <DismissKeyboard>\r\n            <SafeAreaView style={styles.background}>\r\n                <View style={styles.containerTop}>\r\n                    <Text style={styles.mainTitle}>Async Storage</Text>\r\n                    <Text style={styles.subTitle}>Crie sua conta grátis</Text>\r\n                </View>\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Digite seu e-mail...\"\r\n                    autoCorrect={false}\r\n                    keyboardType=\"email-address\"\r\n                    autoCapitalize=\"none\"\r\n                    returnKeyType=\"next\"\r\n                    onChangeText={(email) => setEmail(email)}\r\n                    defaultValue={email}\r\n                    onSubmitEditing={() => senhaInput.focus()}\r\n                />\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Digite sua senha...\"\r\n                    autoCorrect={false}\r\n                    autoCapitalize=\"none\"\r\n                    returnKeyType=\"go\"\r\n                    secureTextEntry\r\n                    onChangeText={(senha) => setSenha(senha)}\r\n                    defaultValue={senha}\r\n                    ref={(input) => (senhaInput = input)}\r\n                    onSubmitEditing={() => ''}\r\n                />\r\n\r\n                <TouchableOpacity style={styles.submitLogin} activeOpacity={0.8}\r\n                    onPress={() => register(email, senha)}\r\n                >\r\n                    <Text style={styles.submitText}>CRIAR CONTA</Text>\r\n                </TouchableOpacity>\r\n            </SafeAreaView>\r\n        </DismissKeyboard>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
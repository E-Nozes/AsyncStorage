{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\env\\\\repos\\\\AsyncStorage\\\\screens\\\\Login.js\";\nimport React, { useState } from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport styles from \"./Login.stylesheet\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { call } from \"react-native-reanimated\";\n\nvar DismissKeyboard = function DismissKeyboard(_ref) {\n  var children = _ref.children;\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default function Login(_ref2) {\n  var navigation = _ref2.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      senha = _useState4[0],\n      setSenha = _useState4[1];\n\n  var senhaInput;\n\n  var login = function login() {\n    var usuarioCadastrado;\n    return _regeneratorRuntime.async(function login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            alert(\"email: \" + email + \", senha: \" + senha);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(email, function (err, result) {\n              if (!usuarioCadastrado || result !== senha) {\n                alert(\"senha errada\");\n              }\n\n              alert(\"sucesso menor\");\n            }));\n\n          case 4:\n            usuarioCadastrado = _context.sent;\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            alert('Erro ao logar' + _context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return React.createElement(DismissKeyboard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, React.createElement(SafeAreaView, {\n    style: styles.background,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.mainTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Async Storage\"), React.createElement(Text, {\n    style: styles.subTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"Hybrid Mobile App Development\")), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Digite seu e-mail...\",\n    autoCorrect: false,\n    keyboardType: \"email-address\",\n    autoCapitalize: \"none\",\n    returnKeyType: \"next\",\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    defaultValue: email,\n    onSubmitEditing: function onSubmitEditing() {\n      return senhaInput.focus();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Digite sua senha...\",\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    returnKeyType: \"go\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(senha) {\n      return setSenha(senha);\n    },\n    defaultValue: senha,\n    ref: function ref(input) {\n      return senhaInput = input;\n    },\n    onSubmitEditing: function onSubmitEditing() {\n      return login();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.submit,\n    activeOpacity: 0.8,\n    onPress: login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.submitText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"ENTRAR\")), React.createElement(View, {\n    style: styles.bottom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.submit,\n    activeOpacity: 0.8,\n    onPress: function onPress() {\n      return navigation.push(\"Register\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#DE3232',\n      fontSize: 24\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, \"criar minha conta\")))));\n}","map":{"version":3,"sources":["C:/env/repos/AsyncStorage/screens/Login.js"],"names":["React","useState","styles","call","DismissKeyboard","children","Keyboard","dismiss","Login","navigation","email","setEmail","senha","setSenha","senhaInput","login","alert","AsyncStorage","getItem","err","result","usuarioCadastrado","background","container","mainTitle","subTitle","input","focus","submit","submitText","bottom","push","color","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Keyboard, SafeAreaView, Text, TextInput, TouchableOpacity, TouchableWithoutFeedback, View } from 'react-native';\r\nimport styles from './Login.stylesheet';\r\nimport { AsyncStorage } from \"react-native-web\";\r\nimport { call } from \"react-native-reanimated\";\r\n\r\nconst DismissKeyboard = ({ children }) => (\r\n    <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\r\n        {children}\r\n    </TouchableWithoutFeedback>\r\n);\r\n\r\nexport default function Login({ navigation }) {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n\r\n    let senhaInput;\r\n\r\n    /**\r\n     * Login function\r\n     */\r\n    const login = async () => {\r\n        try {\r\n            alert(`email: ${email}, senha: ${senha}`)\r\n            const usuarioCadastrado = await AsyncStorage.getItem(email, (err, result) => {\r\n\r\n                if (!usuarioCadastrado || result !== senha) {\r\n                    alert(`senha errada`)\r\n                }\r\n                alert(\"sucesso menor\")\r\n                // navigation.navigate('Home');\r\n            });\r\n\r\n\r\n        } catch (e) {\r\n            alert('Erro ao logar' + e);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <DismissKeyboard>\r\n            <SafeAreaView style={styles.background}>\r\n                <View style={styles.container}>\r\n                    <Text style={styles.mainTitle}>Async Storage</Text>\r\n\r\n                    <Text style={styles.subTitle}>Hybrid Mobile App Development</Text>\r\n                </View>\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Digite seu e-mail...\"\r\n                    autoCorrect={false}\r\n                    keyboardType=\"email-address\"\r\n                    autoCapitalize=\"none\"\r\n                    returnKeyType=\"next\"\r\n                    onChangeText={(email) => setEmail(email)}\r\n                    defaultValue={email}\r\n                    onSubmitEditing={() => senhaInput.focus()}\r\n                />\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Digite sua senha...\"\r\n                    autoCorrect={false}\r\n                    autoCapitalize=\"none\"\r\n                    returnKeyType=\"go\"\r\n                    secureTextEntry\r\n                    onChangeText={(senha) => setSenha(senha)}\r\n                    defaultValue={senha}\r\n                    ref={(input) => (senhaInput = input)}\r\n                    onSubmitEditing={() => login()}\r\n                />\r\n\r\n                <TouchableOpacity\r\n                    style={styles.submit}\r\n                    activeOpacity={0.8}\r\n                    onPress={login}>\r\n                    <Text style={styles.submitText}>ENTRAR</Text>\r\n                </TouchableOpacity>\r\n\r\n                <View style={styles.bottom}>\r\n                    <TouchableOpacity style={styles.submit} activeOpacity={0.8}\r\n                        onPress={() => navigation.push(\"Register\")}>\r\n                        <Text style={{ color: '#DE3232', fontSize: 24 }}>criar minha conta</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </SafeAreaView>\r\n        </DismissKeyboard>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}